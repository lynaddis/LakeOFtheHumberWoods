#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeetaBase")]
public partial class submClassDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertrecommendation(recommendation instance);
  partial void Updaterecommendation(recommendation instance);
  partial void Deleterecommendation(recommendation instance);
  partial void InsertEntry(Entry instance);
  partial void UpdateEntry(Entry instance);
  partial void DeleteEntry(Entry instance);
  partial void InsertillnessAdmin(illnessAdmin instance);
  partial void UpdateillnessAdmin(illnessAdmin instance);
  partial void DeleteillnessAdmin(illnessAdmin instance);
  partial void Insertsubmission(submission instance);
  partial void Updatesubmission(submission instance);
  partial void Deletesubmission(submission instance);
  #endregion
	
	public submClassDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DeetaBaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public submClassDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public submClassDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public submClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public submClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<recommendation> recommendations
	{
		get
		{
			return this.GetTable<recommendation>();
		}
	}
	
	public System.Data.Linq.Table<Entry> Entries
	{
		get
		{
			return this.GetTable<Entry>();
		}
	}
	
	public System.Data.Linq.Table<illnessAdmin> illnessAdmins
	{
		get
		{
			return this.GetTable<illnessAdmin>();
		}
	}
	
	public System.Data.Linq.Table<submission> submissions
	{
		get
		{
			return this.GetTable<submission>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.recommendations")]
public partial class recommendation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _name;
	
	private string _ill_name;
	
	private string _region;
	
	private string _recomend;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onill_nameChanging(string value);
    partial void Onill_nameChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void OnrecomendChanging(string value);
    partial void OnrecomendChanged();
    #endregion
	
	public recommendation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ill_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ill_name
	{
		get
		{
			return this._ill_name;
		}
		set
		{
			if ((this._ill_name != value))
			{
				this.Onill_nameChanging(value);
				this.SendPropertyChanging();
				this._ill_name = value;
				this.SendPropertyChanged("ill_name");
				this.Onill_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="VarChar(50)")]
	public string region
	{
		get
		{
			return this._region;
		}
		set
		{
			if ((this._region != value))
			{
				this.OnregionChanging(value);
				this.SendPropertyChanging();
				this._region = value;
				this.SendPropertyChanged("region");
				this.OnregionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recomend", DbType="VarChar(MAX)")]
	public string recomend
	{
		get
		{
			return this._recomend;
		}
		set
		{
			if ((this._recomend != value))
			{
				this.OnrecomendChanging(value);
				this.SendPropertyChanging();
				this._recomend = value;
				this.SendPropertyChanged("recomend");
				this.OnrecomendChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entry")]
public partial class Entry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.DateTime _EntryDate;
	
	private string _AppAvail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnAppAvailChanging(string value);
    partial void OnAppAvailChanged();
    #endregion
	
	public Entry()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
	public System.DateTime EntryDate
	{
		get
		{
			return this._EntryDate;
		}
		set
		{
			if ((this._EntryDate != value))
			{
				this.OnEntryDateChanging(value);
				this.SendPropertyChanging();
				this._EntryDate = value;
				this.SendPropertyChanged("EntryDate");
				this.OnEntryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppAvail", DbType="VarChar(MAX)")]
	public string AppAvail
	{
		get
		{
			return this._AppAvail;
		}
		set
		{
			if ((this._AppAvail != value))
			{
				this.OnAppAvailChanging(value);
				this.SendPropertyChanging();
				this._AppAvail = value;
				this.SendPropertyChanged("AppAvail");
				this.OnAppAvailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.illnessAdmin")]
public partial class illnessAdmin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _InfectionName;
	
	private string _Location;
	
	private string _entryDate;
	
	private string _Description;
	
	private string _symptoms;
	
	private string _preventatives;
	
	private string _treatments;
	
	private string _recomend;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInfectionNameChanging(string value);
    partial void OnInfectionNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnentryDateChanging(string value);
    partial void OnentryDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnsymptomsChanging(string value);
    partial void OnsymptomsChanged();
    partial void OnpreventativesChanging(string value);
    partial void OnpreventativesChanged();
    partial void OntreatmentsChanging(string value);
    partial void OntreatmentsChanged();
    partial void OnrecomendChanging(string value);
    partial void OnrecomendChanged();
    #endregion
	
	public illnessAdmin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfectionName", DbType="VarChar(50)")]
	public string InfectionName
	{
		get
		{
			return this._InfectionName;
		}
		set
		{
			if ((this._InfectionName != value))
			{
				this.OnInfectionNameChanging(value);
				this.SendPropertyChanging();
				this._InfectionName = value;
				this.SendPropertyChanged("InfectionName");
				this.OnInfectionNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(100)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryDate", DbType="VarChar(11)")]
	public string entryDate
	{
		get
		{
			return this._entryDate;
		}
		set
		{
			if ((this._entryDate != value))
			{
				this.OnentryDateChanging(value);
				this.SendPropertyChanging();
				this._entryDate = value;
				this.SendPropertyChanged("entryDate");
				this.OnentryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symptoms", DbType="VarChar(200)")]
	public string symptoms
	{
		get
		{
			return this._symptoms;
		}
		set
		{
			if ((this._symptoms != value))
			{
				this.OnsymptomsChanging(value);
				this.SendPropertyChanging();
				this._symptoms = value;
				this.SendPropertyChanged("symptoms");
				this.OnsymptomsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preventatives", DbType="VarChar(200)")]
	public string preventatives
	{
		get
		{
			return this._preventatives;
		}
		set
		{
			if ((this._preventatives != value))
			{
				this.OnpreventativesChanging(value);
				this.SendPropertyChanging();
				this._preventatives = value;
				this.SendPropertyChanged("preventatives");
				this.OnpreventativesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatments", DbType="VarChar(200)")]
	public string treatments
	{
		get
		{
			return this._treatments;
		}
		set
		{
			if ((this._treatments != value))
			{
				this.OntreatmentsChanging(value);
				this.SendPropertyChanging();
				this._treatments = value;
				this.SendPropertyChanged("treatments");
				this.OntreatmentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recomend", DbType="VarChar(MAX)")]
	public string recomend
	{
		get
		{
			return this._recomend;
		}
		set
		{
			if ((this._recomend != value))
			{
				this.OnrecomendChanging(value);
				this.SendPropertyChanging();
				this._recomend = value;
				this.SendPropertyChanged("recomend");
				this.OnrecomendChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submissions")]
public partial class submission : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _FullName;
	
	private System.Nullable<int> _age;
	
	private string _gender;
	
	private string _email;
	
	private string _phone;
	
	private string _reason;
	
	private string _VolExp;
	
	private string _ifYes;
	
	private System.Nullable<decimal> _noHours;
	
	private string _personRequest;
	
	private string _interest;
	
	private string _allergies;
	
	private string _deptRefuse;
	
	private string _deptRequest;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnVolExpChanging(string value);
    partial void OnVolExpChanged();
    partial void OnifYesChanging(string value);
    partial void OnifYesChanged();
    partial void OnnoHoursChanging(System.Nullable<decimal> value);
    partial void OnnoHoursChanged();
    partial void OnpersonRequestChanging(string value);
    partial void OnpersonRequestChanged();
    partial void OninterestChanging(string value);
    partial void OninterestChanged();
    partial void OnallergiesChanging(string value);
    partial void OnallergiesChanged();
    partial void OndeptRefuseChanging(string value);
    partial void OndeptRefuseChanged();
    partial void OndeptRequestChanging(string value);
    partial void OndeptRequestChanged();
    #endregion
	
	public submission()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(80)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
	public System.Nullable<int> age
	{
		get
		{
			return this._age;
		}
		set
		{
			if ((this._age != value))
			{
				this.OnageChanging(value);
				this.SendPropertyChanging();
				this._age = value;
				this.SendPropertyChanged("age");
				this.OnageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(2)")]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(60)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Char(11)")]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="VarChar(MAX)")]
	public string reason
	{
		get
		{
			return this._reason;
		}
		set
		{
			if ((this._reason != value))
			{
				this.OnreasonChanging(value);
				this.SendPropertyChanging();
				this._reason = value;
				this.SendPropertyChanged("reason");
				this.OnreasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolExp", DbType="VarChar(3)")]
	public string VolExp
	{
		get
		{
			return this._VolExp;
		}
		set
		{
			if ((this._VolExp != value))
			{
				this.OnVolExpChanging(value);
				this.SendPropertyChanging();
				this._VolExp = value;
				this.SendPropertyChanged("VolExp");
				this.OnVolExpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifYes", DbType="VarChar(200)")]
	public string ifYes
	{
		get
		{
			return this._ifYes;
		}
		set
		{
			if ((this._ifYes != value))
			{
				this.OnifYesChanging(value);
				this.SendPropertyChanging();
				this._ifYes = value;
				this.SendPropertyChanged("ifYes");
				this.OnifYesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noHours", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> noHours
	{
		get
		{
			return this._noHours;
		}
		set
		{
			if ((this._noHours != value))
			{
				this.OnnoHoursChanging(value);
				this.SendPropertyChanging();
				this._noHours = value;
				this.SendPropertyChanged("noHours");
				this.OnnoHoursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personRequest", DbType="VarChar(80)")]
	public string personRequest
	{
		get
		{
			return this._personRequest;
		}
		set
		{
			if ((this._personRequest != value))
			{
				this.OnpersonRequestChanging(value);
				this.SendPropertyChanging();
				this._personRequest = value;
				this.SendPropertyChanged("personRequest");
				this.OnpersonRequestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interest", DbType="VarChar(100)")]
	public string interest
	{
		get
		{
			return this._interest;
		}
		set
		{
			if ((this._interest != value))
			{
				this.OninterestChanging(value);
				this.SendPropertyChanging();
				this._interest = value;
				this.SendPropertyChanged("interest");
				this.OninterestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allergies", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string allergies
	{
		get
		{
			return this._allergies;
		}
		set
		{
			if ((this._allergies != value))
			{
				this.OnallergiesChanging(value);
				this.SendPropertyChanging();
				this._allergies = value;
				this.SendPropertyChanged("allergies");
				this.OnallergiesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptRefuse", DbType="VarChar(100)")]
	public string deptRefuse
	{
		get
		{
			return this._deptRefuse;
		}
		set
		{
			if ((this._deptRefuse != value))
			{
				this.OndeptRefuseChanging(value);
				this.SendPropertyChanging();
				this._deptRefuse = value;
				this.SendPropertyChanged("deptRefuse");
				this.OndeptRefuseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptRequest", DbType="VarChar(100)")]
	public string deptRequest
	{
		get
		{
			return this._deptRequest;
		}
		set
		{
			if ((this._deptRequest != value))
			{
				this.OndeptRequestChanging(value);
				this.SendPropertyChanging();
				this._deptRequest = value;
				this.SendPropertyChanged("deptRequest");
				this.OndeptRequestChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
